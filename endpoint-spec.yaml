openapi: 3.0.0
info:
  version: '1.0'
  title: Heating Monitor
  description: Connecting heating systems of Bosch Thermotechnology
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
paths:
  /subscriptions:
    post:
      summary: Create a new subscription for a specific device. The subscription is created with the attribute "active" set to true, meaning that the subscription is active. To deactivate the subscription, you should call the endpoint /subscriptions/{subscriptionId}:deactivate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  type: string
                  format: uuid
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: invalid device uuid format supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}:listen:
    post:
      summary: This endpoint is responsible for creating a communication channel with whoever calls it, sending notifications from a device.
      parameters:
        - in: path
          name: subscriptionId
          description: The subscription id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: There is no subscription with the provided ID.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}:
    get:
      summary: Retrieves the subscription based on its id. This way you can check the attributes of the subscription, such as the "active" attribute which indicates whether the subscription is active or not.
      parameters:
        - in: path
          name: subscriptionId
          description: The subscription id
          required: true
          schema:
            type: string
            format: uuid
            minimum: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: gateway not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notifications:
    post:
      summary: This endpoint is responsible for receiving notifications requests from temperature monitoring appliances.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                code:
                  type: string
                subscription:
                  type: string
                  format: uuid
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: invalid request supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: gateway not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        active:
          type: boolean
        device:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        notificationStatus:
          type: string
        message:
          type: string
        code:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        subscription:
          type: string
          format: uuid